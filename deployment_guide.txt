
# Django Deployment Guide
## Steps to Deploy on EC2

### 1. Launch an EC2 Instance
1. Go to the AWS Management Console and navigate to **EC2**.
2. Launch a new instance:
   - Choose an Amazon Linux or Ubuntu AMI.
   - Select an instance type (e.g., `t2.micro` for testing).
   - Configure security groups to allow:
     - SSH (Port 22)
     - HTTP (Port 80)
     - Custom TCP Rule (Port 8000, for Docker testing).
3. Launch the instance and SSH into it.

### 2. Install Docker and Docker Compose
Run the following commands to install Docker and Docker Compose:
```
# Update the package list
sudo apt update

# Install Docker
sudo apt install -y docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Install Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
```

Verify installation:
```
docker --version
docker-compose --version
```

### 3. Copy Project Files to EC2
1. Use `scp` to copy your project files to the EC2 instance:
```
scp -r /path/to/your/project ubuntu@your-ec2-public-ip:/home/ubuntu/
```
2. SSH into the instance:
```
ssh ubuntu@your-ec2-public-ip
```

### 4. Build and Run Docker Containers
1. Navigate to your project directory:
```
cd /home/ubuntu/your-project-directory
```

2. Build and start the containers:
```
sudo docker-compose up --build -d
```

3. Verify the containers are running:
```
sudo docker ps
```

4. Access your application in the browser using `http://your-ec2-public-ip:8000`.

### 5. Deploy with Kubernetes (Optional)
If you want to use Kubernetes:
1. Install `kubectl` and `minikube` or connect to an existing EKS cluster.
2. Apply the Kubernetes configuration:
```
kubectl apply -f k8s-deployment.yaml
```

3. Verify the deployment:
```
kubectl get pods
kubectl get services
```

---

Let me know if you need help with specific steps!
